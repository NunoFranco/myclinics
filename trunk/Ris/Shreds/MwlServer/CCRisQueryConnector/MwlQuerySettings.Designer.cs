//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClearCanvas.Ris.Shreds.MwlServer.CCRisQueryConnector {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "9.0.0.0")]
    internal sealed partial class MwlQuerySettings : global::System.Configuration.ApplicationSettingsBase {
        
        private static MwlQuerySettings defaultInstance = ((MwlQuerySettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new MwlQuerySettings())));
        
        public static MwlQuerySettings Default {
            get {
                return defaultInstance;
            }
        }
        
        /// <summary>
        /// Controls the maximum number of worklist results per query
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Controls the maximum number of worklist results per query")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("200")]
        public int MaxResultsPerQuery {
            get {
                return ((int)(this["MaxResultsPerQuery"]));
            }
        }
        
        /// <summary>
        /// Enable the default ScheduledStartDate bounds if the ScheduledStartDate parameter is not specified in the query .  If false, the default query is uncounded
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Enable the default ScheduledStartDate bounds if the ScheduledStartDate parameter " +
            "is not specified in the query .  If false, the default query is uncounded")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool EnableDefaultScheduledStartDateTimeQueryBound {
            get {
                return ((bool)(this["EnableDefaultScheduledStartDateTimeQueryBound"]));
            }
        }
        
        /// <summary>
        /// Specifies the lower bound of ScheduledStartDateTime to the number of hours from now
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Specifies the lower bound of ScheduledStartDateTime to the number of hours from n" +
            "ow")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("24")]
        public int DefaultScheduledStartDateTimeUpperBound {
            get {
                return ((int)(this["DefaultScheduledStartDateTimeUpperBound"]));
            }
        }
        
        /// <summary>
        /// Specifies the upper bound of ScheduledStartDateTime to the number of hours before now
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Specifies the upper bound of ScheduledStartDateTime to the number of hours before" +
            " now")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("24")]
        public int DefaultScheduledStartDateTimeLowerBound {
            get {
                return ((int)(this["DefaultScheduledStartDateTimeLowerBound"]));
            }
        }
    }
}
